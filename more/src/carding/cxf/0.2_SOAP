WSDL:
1.网络服务描述语言是Web Service的描述语言，它包含一系列描述某个web service的定义。
2.WSDL 文档可以分为两部分。顶部分由抽象定义组成，而底部分则由具体描述组成。
3.怎样向别人介绍你的 web service 有什么功能，以及每个函数调用时的参数呢？你可能会自己写一套文档，你甚至可能会口头上告诉需要使用你的 web service 的人。这些非正式的方法至少都有一个严重的问题：当程序员坐到电脑前，想要使用你的 web service 的时候，他们的工具（如 Visual Studio）无法给他们提供任何帮助，因为这些工具根本就不了解你的 web service。
解决方法是：用机器能阅读的方式提供一个正式的描述文档。web service 描述语言 (WSDL) 就是这样一个基于 XML 的语言，用于描述 web service 及其函数、参数和返回值。因为是基于 XML 的，所以 WSDL 既是机器可阅读的，又是人可阅读的，这将是一个很大的好处。一些最新的开发工具既能根据你的 web service 生成 WSDL 文档，又能导入 WSDL 文档，生成调用相应 web service 的代码。

UDDI:
1.UDDI 是一种目录服务，企业可以使用它对 Web services 进行注册和搜索。UDDI，英文为 "Universal Description, Discovery and Integration"，可译为“通用描述、发现与集成服务”。

RPC:
1.RPC（Remote Procedure Call Protocol）——远程过程调用协议，它是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。
1.1.RPC协议假定某些传输协议的存在，如TCP或UDP，为通信程序之间携带信息数据。在OSI网络通信模型中，RPC跨越了传输层和应用层。RPC使得开发包括网络分布式多程序在内的应用程序更加容易。
2.为什么RPC呢？就是无法在一个进程内，甚至一个计算机内通过本地调用的方式完成的需求，比如不同的系统间的通讯，甚至不同的组织间的通讯。由于计算能力需要横向扩展，需要在多台机器组成的集群上部署应用，
3.RPC的协议有很多，比如最早的CORBA，Java RMI，Web Service的RPC风格，Hessian，Thrift，甚至Rest API。
4.HttpClient:Apache Jakarta Common 下的子项目，用来功能丰富的支持 HTTP 协议的客户端编程工具包.

SOAP:
1:简单对象访问协议,是一种轻量的、简单的、基于XML（标准通用标记语言下的一个子集）的协议，它被设计成在WEB上交换结构化的和固化的信息。
2.webService三要素:
SOAP、soap用来描述传递信息的格式
WSDL(WebServicesDescriptionLanguage)、WSDL 用来描述如何访问具体的接口
UDDI(UniversalDescriptionDiscovery andIntegration)之一, uddi用来管理，分发，查询webService 。
3.1.SOAP 可以和现存的许多因特网协议和格式结合使用，包括超文本传输协议（HTTP），简单邮件传输协议（SMTP），多用途网际邮件扩充协议（MIME）。
3.2.它还支持从消息系统到远程过程调用（RPC）等大量的应用程序。
3.3.SOAP使用基于XML的数据结构和超文本传输协议(HTTP)的组合定义了一个标准的方法来使用Internet上各种不同操作环境中的分布式对象。
4.1.SOAP采用了已经广泛使用的两个协议:HTTP 和XML（标准通用标记语言下的一个子集）。HTTP用于实现 SOAP 的RPC 风格的传输, 而XML 是它的编码模式。
4.2.SOAP 通讯协议使用 HTTP 来发送XML 格式的信息。
4.3.具体地讲, 一个SOAP 方法可以简单地看作遵循SOAP编码规则的HTTP请求和响应, 一个 SOAP终端则可以看作一个基于HTTP 的URL, 它用来识别方法调用的目标。
5.1.简单的。
客户端发送一个请求,调用相应的对象, 然后服务器返回结果。这些消息是XML 格式的,并且封装成符合HTTP 协议的消息。因此,它符合任何路由器、 防火墙或代理服务器的要求。
5.2.完全和厂商无关。与编程语言无关。与平台无关(操作系统)。


